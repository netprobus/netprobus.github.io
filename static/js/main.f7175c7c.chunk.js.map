{"version":3,"sources":["index.js"],"names":["retrieveData","url","caller","callback","fetch","then","response","status","Error","body","json","catch","error","console","log","setState","feedback","isLoading","Feedback","props","className","PingGraph","data","length","table","spec","width","height","name","title","transform","mark","encoding","row","field","x","type","axis","y","color","legend","tooltip","SpeedGraph","layer","WiFiGraph","opacity","stroke","strokeWidth","NodeSelector","processChange","bind","event","this","selector","target","value","nodelist","nodes","map","node","idx","id","onChange","React","Component","App","state","selectedNode","pings","speeds","index","forEach","n","i","pingPromise","speedPromise","wifiPromise","wifis","Promise","all","values","processNodeSelection","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7175c7c.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {VegaLite} from 'react-vega';\nimport './index.css';\n\nfunction retrieveData(url, caller, callback){\n  return fetch(url)\n  .then(response => {\n    if(response.status >= 400){\n      throw new Error(response.status + \" \" + response.body);\n    }\n\n    return response.json();\n  })\n  .then(json =>{\n    callback(json);\n  })\n  .catch(error =>{\n    console.log(error);\n    caller.setState({\n      feedback: \"Error loading data from: \" + url + \"\\nError was: \" + error,\n      isLoading: false\n    });\n  });\n}\n\nfunction Feedback(props){\n  if (props.feedback){\n    return(<div className=\"netprobe-feedback\">{props.feedback}</div>);\n  }\n\n  return(<div className=\"netprobe-feedback\">{props.isLoading ? \"Please wait...\" : \"\"}</div>);\n}\n\nfunction PingGraph(props){\n  const pingSpec = {\n    width: 400,\n    height: 200,\n    data: { name: 'table' },\n    title: 'Ping Results',\n    transform: [\n      {\"calculate\": \"round(100*datum.loss)\", \"as\": \"pct_loss\"},\n      {\"calculate\": \"time(datum.tstamp)\", \"as\": \"time\"},\n    ],\n    mark: 'area',\n    encoding: {\n      row: {field: 'host'},\n      x: {\n        field: 'tstamp',\n        type: 'temporal',\n        axis: {\n          title: 'Time'\n        }\n      },\n      y: {\n        field: 'avg',\n        type: 'quantitative',\n        axis: {\n          title: 'Average (ms)'\n        }\n      },\n      color: {\n        field: 'host',\n        type: 'nominal',\n        legend: null\n      },\n      tooltip: [\n        {field: 'min', type: 'quantitative', title: \"Min (ms)\"},\n        {field: 'avg', type: 'quantitative', title: \"Avg (ms)\"},\n        {field: 'max', type: 'quantitative', title: \"Max (ms)\"},\n        {field: 'pct_loss', type: 'quantitative', title: \"Percent Loss\"},\n        {field: 'tstr', type: 'ordinal', title: \"Time\"},\n        {field: 'tstamp', type: 'ordinal', title: \"Timestamp\"},\n      ]\n    },\n  };\n\n  if(props.data && props.data.length > 0){\n    const data = {table: props.data};\n    return(\n      <div className=\"netprobe-graph\">\n        <VegaLite spec={pingSpec} data={data}/>\n      </div>);\n  }\n  else{\n    return(\n      <div className=\"netprobe-graph-nodata\">\n      </div>);\n  }\n}\n\nfunction SpeedGraph(props){\n  const spec = {\n    width: 400,\n    height: 200,\n    data: { name: 'table' },\n    title: 'Network Speed Results',\n    mark: 'area',\n    encoding: {\n      x: {\n        field: 'tstamp',\n        type: 'temporal',\n        axis: {\n          title: 'Time'\n        }\n      },\n      tooltip: [\n        {field: 'down_mbps', type: 'quantitative', title: \"Down (Mbps)\"},\n        {field: 'up_mbps', type: 'quantitative', title: \"Up (Mbps)\"},\n        {field: 'ping', type: 'quantitative', title: \"Ping (ms)\"},\n        {field: 'tstr', type: 'ordinal', title: \"Time\"},\n        {field: 'tstamp', type: 'ordinal', title: \"Timestamp\"},\n      ]\n    },\n    layer: [\n      {\n        mark: {type: 'area', color: 'green'},\n        encoding: {\n          y: {\n            field: 'down_mbps',\n            type: 'quantitative',\n            axis: {\n              title: 'Mbps'\n            }\n          }\n        }\n      },\n      {\n        mark: {type: 'area', color: 'blue'},\n        encoding: {\n          y: {\n            field: 'up_mbps',\n            type: 'quantitative',\n          }\n        }\n      }\n    ],\n  };\n\n  if(props.data && props.data.length > 0){\n    const data = {table: props.data};\n    return(\n      <div className=\"netprobe-graph\">\n        <VegaLite spec={spec} data={data}/>\n      </div>);\n  }\n  else{\n    return(\n      <div className=\"netprobe-graph-nodata\">\n      </div>);\n  }\n}\n\nfunction WiFiGraph(props){\n  const spec = {\n    width: 400,\n    height: 200,\n    data: { name: 'table' },\n    title: 'WiFi Network Results',\n    mark: {\n      type: 'circle',\n      opacity: 0.8,\n      stroke: 'black',\n      strokeWidth: 1,\n    },\n    encoding: {\n      x: {\n        field: 'chan',\n        type: 'ordinal',\n        axis: {\n          title: 'Channel'\n        }\n      },\n      y: {\n        field: 'str',\n        type: 'quantitative',\n        axis: {\n          title: 'Strength'\n        }\n      },\n      color: {field: 'ssid', type: 'nominal'},\n      // size: {\n      //   field: 'str',\n      //   type: 'quantitative',\n      //   title: 'Network Strength',\n      //   scale: {rangeMax: 100}\n      // },\n      tooltip: [\n        {field: 'str', type: 'quantitative', title: \"Strength\"},\n        {field: 'ssid', type: 'nominal', title: \"SSID\"},\n        {field: 'chan', type: 'quantitative', title: \"Channel\"},\n        {field: 'tstamp', type: 'ordinal', title: \"Timestamp\"},\n      ]\n    },\n  };\n\n  if(props.data && props.data.length > 0){\n    const data = {table: props.data};\n    return(\n      <div className=\"netprobe-graph\">\n        <VegaLite spec={spec} data={data}/>\n      </div>);\n  }\n  else{\n    return(\n      <div className=\"netprobe-graph-nodata\">\n      </div>);\n  }\n}\n\nclass NodeSelector extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.processChange = this.processChange.bind(this);\n  }\n\n  processChange(event){\n    this.props.selector(event.target.value);\n  }\n\n  render(){\n    const nodelist = this.props.nodes.map((node, idx)=>{\n      return (\n        <option value={node} key={idx}>{node}</option>\n      )\n    });\n\n    if (nodelist && nodelist.length > 0){\n      return (\n        <div className=\"netprobe-nodes\">\n          <label>\n            Select a node:\n            <select name=\"nodes\" id=\"node-selector\" onChange={this.processChange}>\n              <option value=\"NONE\">---Please select a node---</option>\n              {nodelist}\n            </select>\n          </label>\n        </div>\n      );\n    }\n    else{\n      return (<div className=\"netprobe-nodes\">No nodes are currently available. Please wait...</div>);\n    }\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedNode: null,\n      feedback: null,\n      nodes: [],\n      isLoading: false,\n      pings: [],\n      speeds: [],\n    };\n  }\n\n  componentDidMount(){\n    this.setState({isLoading: true, feedback: \"Loading node list...\"});\n    const url =\n      'https://us-central1-netprobeme.cloudfunctions.net/nodelist';\n\n    retrieveData(url, this, nodes=>{\n      this.setState({\n        nodes: nodes,\n        isLoading: false,\n        feedback: null,\n      });\n    });\n  }\n\n  processNodeSelection(value) {\n    let node;\n    let index;\n    this.state.nodes.forEach((n,i)=>{\n      if (n === value){\n        node = value;\n        index = i;\n      }\n    });\n\n    this.setState({\n      selectedNode: index,\n      feedback: 'Current node: ' + node,\n      isLoading: true,\n    });\n\n    const url=\"https://us-central1-netprobeme.cloudfunctions.net/getNetprobeData?nodeId=\" + node + \"&dataset=\";\n    const pingPromise = retrieveData(url + \"ping\", this, pings=>{\n      this.setState({\n        pings: pings,\n        feedback: \"Ping data loaded.\",\n      });\n    });\n\n    const speedPromise = retrieveData(url + \"speed\", this, speeds=>{\n      this.setState({\n        speeds: speeds,\n        feedback: \"Network speed data loaded.\",\n      });\n    });\n\n    const wifiPromise = retrieveData(url + \"wifi\", this, wifis=>{\n      this.setState({\n        wifis: wifis,\n        feedback: \"WiFi networks loaded.\",\n      });\n    });\n\n    Promise.all([pingPromise, speedPromise, wifiPromise]).then((values)=>{\n      this.setState({\n        isLoading: false,\n        feedback: \"All data loaded for: \" + node\n      });\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"netprobe\">\n        <div className=\"netprobe-header\">\n          <NodeSelector\n            nodes={this.state.nodes}\n            selector={(value)=>this.processNodeSelection(value)}/>\n        </div>\n        <div className=\"netprobe-graphs\">\n          <PingGraph data={this.state.pings}/>\n          <SpeedGraph data={this.state.speeds}/>\n          <WiFiGraph data={this.state.wifis}/>\n        </div>\n        <div className=\"netprobe-status\">\n          <Feedback isLoading={this.state.isLoading} feedback={this.state.feedback}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}